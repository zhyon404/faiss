// WARNING: This file has automatically been generated on Thu, 03 Jan 2019 19:45:13 CST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package faiss_go

/*
#cgo darwin LDFLAGS: -Lc_api -lfaiss_c
#cgo darwin LDFLAGS: -L.. -lfaiss
#cgo linux LDFLAGS: -Lc_api -lfaiss_c
#cgo linux LDFLAGS: -L.. -lfaiss
#cgo darwin LDFLAGS: -Wl,-undefined,dynamic_lookup
#cgo linux LDFLAGS: -L/usr/local/lib -lstdc++ -pthread -lcrypt -lm -fopenmp -lblas -llapack
#include "c_api/AutoTune_c.h"
#include "c_api/AuxIndexStructures_c.h"
#include "c_api/Clustering_c.h"
#include "c_api/Index_c.h"
#include "c_api/IndexFlat_c.h"
#include "c_api/IndexIVF_c.h"
#include "c_api/IndexLSH_c.h"
#include "c_api/MetaIndexes_c.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// FaissIndexFactory function as declared in c_api/AutoTune_c.h:25
func FaissIndexFactory(pIndex **Faissindex, d int32, description string, metric Faissmetrictype) int32 {
	cpIndex, _ := (**C.FaissIndex)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cd, _ := (C.int)(d), cgoAllocsUnknown
	cdescription, _ := unpackPCharString(description)
	cmetric, _ := (C.FaissMetricType)(metric), cgoAllocsUnknown
	__ret := C.faiss_index_factory(cpIndex, cd, cdescription, cmetric)
	__v := (int32)(__ret)
	return __v
}

// FaissParameterrangeName function as declared in c_api/AutoTune_c.h:30
func FaissParameterrangeName(arg0 *Faissparameterrange) string {
	carg0, _ := (*C.FaissParameterRange)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_ParameterRange_name(carg0)
	__v := packPCharString(__ret)
	return __v
}

// FaissParameterrangeValues function as declared in c_api/AutoTune_c.h:34
func FaissParameterrangeValues(arg0 *Faissparameterrange, arg1 **float64, arg2 *uint) {
	carg0, _ := (*C.FaissParameterRange)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := (**C.double)(unsafe.Pointer(arg1)), cgoAllocsUnknown
	carg2, _ := (*C.size_t)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	C.faiss_ParameterRange_values(carg0, carg1, carg2)
}

// FaissParameterspaceNew function as declared in c_api/AutoTune_c.h:41
func FaissParameterspaceNew(space **Faissparameterspace) int32 {
	cspace, _ := (**C.FaissParameterSpace)(unsafe.Pointer(space)), cgoAllocsUnknown
	__ret := C.faiss_ParameterSpace_new(cspace)
	__v := (int32)(__ret)
	return __v
}

// FaissParameterspaceNCombinations function as declared in c_api/AutoTune_c.h:44
func FaissParameterspaceNCombinations(arg0 *Faissparameterspace) uint {
	carg0, _ := (*C.FaissParameterSpace)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_ParameterSpace_n_combinations(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissParameterspaceCombinationName function as declared in c_api/AutoTune_c.h:49
func FaissParameterspaceCombinationName(arg0 *Faissparameterspace, arg1 uint, arg2 []byte, arg3 uint) int32 {
	carg0, _ := (*C.FaissParameterSpace)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := (C.size_t)(arg1), cgoAllocsUnknown
	carg2, _ := (*C.char)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&arg2)).Data)), cgoAllocsUnknown
	carg3, _ := (C.size_t)(arg3), cgoAllocsUnknown
	__ret := C.faiss_ParameterSpace_combination_name(carg0, carg1, carg2, carg3)
	__v := (int32)(__ret)
	return __v
}

// FaissParameterspaceSetIndexParameters function as declared in c_api/AutoTune_c.h:52
func FaissParameterspaceSetIndexParameters(arg0 *Faissparameterspace, arg1 []Faissindex, arg2 string) int32 {
	carg0, _ := (*C.FaissParameterSpace)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := (*C.FaissIndex)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&arg1)).Data)), cgoAllocsUnknown
	carg2, _ := unpackPCharString(arg2)
	__ret := C.faiss_ParameterSpace_set_index_parameters(carg0, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// FaissParameterspaceSetIndexParametersCno function as declared in c_api/AutoTune_c.h:55
func FaissParameterspaceSetIndexParametersCno(arg0 *Faissparameterspace, arg1 []Faissindex, arg2 uint) int32 {
	carg0, _ := (*C.FaissParameterSpace)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := (*C.FaissIndex)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&arg1)).Data)), cgoAllocsUnknown
	carg2, _ := (C.size_t)(arg2), cgoAllocsUnknown
	__ret := C.faiss_ParameterSpace_set_index_parameters_cno(carg0, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// FaissParameterspaceSetIndexParameter function as declared in c_api/AutoTune_c.h:58
func FaissParameterspaceSetIndexParameter(arg0 *Faissparameterspace, arg1 *Faissindex, arg2 string, arg3 float64) int32 {
	carg0, _ := (*C.FaissParameterSpace)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := (*C.FaissIndex)(unsafe.Pointer(arg1)), cgoAllocsUnknown
	carg2, _ := unpackPCharString(arg2)
	carg3, _ := (C.double)(arg3), cgoAllocsUnknown
	__ret := C.faiss_ParameterSpace_set_index_parameter(carg0, carg1, carg2, carg3)
	__v := (int32)(__ret)
	return __v
}

// FaissParameterspaceDisplay function as declared in c_api/AutoTune_c.h:61
func FaissParameterspaceDisplay(arg0 *Faissparameterspace) {
	carg0, _ := (*C.FaissParameterSpace)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	C.faiss_ParameterSpace_display(carg0)
}

// FaissParameterspaceAddRange function as declared in c_api/AutoTune_c.h:64
func FaissParameterspaceAddRange(arg0 *Faissparameterspace, arg1 string, arg2 **Faissparameterrange) int32 {
	carg0, _ := (*C.FaissParameterSpace)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := unpackPCharString(arg1)
	carg2, _ := (**C.FaissParameterRange)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.faiss_ParameterSpace_add_range(carg0, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexFree function as declared in c_api/Index_c.h:36
func FaissIndexFree(obj *Faissindex) {
	cobj, _ := (*C.FaissIndex)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_Index_free(cobj)
}

// FaissIndexD function as declared in c_api/Index_c.h:39
func FaissIndexD(arg0 *Faissindex) int32 {
	carg0, _ := (*C.FaissIndex)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Index_d(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexIsTrained function as declared in c_api/Index_c.h:42
func FaissIndexIsTrained(arg0 *Faissindex) int32 {
	carg0, _ := (*C.FaissIndex)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Index_is_trained(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexNtotal function as declared in c_api/Index_c.h:45
func FaissIndexNtotal(arg0 *Faissindex) int {
	carg0, _ := (*C.FaissIndex)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Index_ntotal(carg0)
	__v := (int)(__ret)
	return __v
}

// FaissIndexMetricType function as declared in c_api/Index_c.h:48
func FaissIndexMetricType(arg0 *Faissindex) Faissmetrictype {
	carg0, _ := (*C.FaissIndex)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Index_metric_type(carg0)
	__v := (Faissmetrictype)(__ret)
	return __v
}

// FaissIndexTrain function as declared in c_api/Index_c.h:56
func FaissIndexTrain(index *Faissindex, n int, x []float32) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	__ret := C.faiss_Index_train(cindex, cn, cx)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexAdd function as declared in c_api/Index_c.h:66
func FaissIndexAdd(index *Faissindex, n int, x []float32) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	__ret := C.faiss_Index_add(cindex, cn, cx)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexAddWithIds function as declared in c_api/Index_c.h:76
func FaissIndexAddWithIds(index *Faissindex, n int, x []float32, xids []int) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	cxids, _ := (*C.long)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&xids)).Data)), cgoAllocsUnknown
	__ret := C.faiss_Index_add_with_ids(cindex, cn, cx, cxids)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexSearch function as declared in c_api/Index_c.h:88
func FaissIndexSearch(index *Faissindex, n int, x []float32, k int, distances []float32, labels []int) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	ck, _ := (C.idx_t)(k), cgoAllocsUnknown
	cdistances, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&distances)).Data)), cgoAllocsUnknown
	clabels, _ := (*C.idx_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&labels)).Data)), cgoAllocsUnknown
	__ret := C.faiss_Index_search(cindex, cn, cx, ck, cdistances, clabels)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexRangeSearch function as declared in c_api/Index_c.h:102
func FaissIndexRangeSearch(index *Faissindex, n int, x []float32, radius float32, result *Faissrangesearchresult) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	cradius, _ := (C.float)(radius), cgoAllocsUnknown
	cresult, _ := (*C.FaissRangeSearchResult)(unsafe.Pointer(result)), cgoAllocsUnknown
	__ret := C.faiss_Index_range_search(cindex, cn, cx, cradius, cresult)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexAssign function as declared in c_api/Index_c.h:112
func FaissIndexAssign(index *Faissindex, n int, x []float32, labels []int, k int) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	clabels, _ := (*C.idx_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&labels)).Data)), cgoAllocsUnknown
	ck, _ := (C.idx_t)(k), cgoAllocsUnknown
	__ret := C.faiss_Index_assign(cindex, cn, cx, clabels, ck)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexReset function as declared in c_api/Index_c.h:117
func FaissIndexReset(index *Faissindex) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	__ret := C.faiss_Index_reset(cindex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexRemoveIds function as declared in c_api/Index_c.h:123
func FaissIndexRemoveIds(index *Faissindex, sel *Faissidselector, nRemoved *int) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	csel, _ := (*C.FaissIDSelector)(unsafe.Pointer(sel)), cgoAllocsUnknown
	cnRemoved, _ := (*C.long)(unsafe.Pointer(nRemoved)), cgoAllocsUnknown
	__ret := C.faiss_Index_remove_ids(cindex, csel, cnRemoved)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexReconstruct function as declared in c_api/Index_c.h:132
func FaissIndexReconstruct(index *Faissindex, key int, recons []float32) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	ckey, _ := (C.idx_t)(key), cgoAllocsUnknown
	crecons, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&recons)).Data)), cgoAllocsUnknown
	__ret := C.faiss_Index_reconstruct(cindex, ckey, crecons)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexReconstructN function as declared in c_api/Index_c.h:140
func FaissIndexReconstructN(index *Faissindex, i0 int, ni int, recons []float32) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	ci0, _ := (C.idx_t)(i0), cgoAllocsUnknown
	cni, _ := (C.idx_t)(ni), cgoAllocsUnknown
	crecons, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&recons)).Data)), cgoAllocsUnknown
	__ret := C.faiss_Index_reconstruct_n(cindex, ci0, cni, crecons)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexComputeResidual function as declared in c_api/Index_c.h:154
func FaissIndexComputeResidual(index *Faissindex, x []float32, residual []float32, key int) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	cresidual, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&residual)).Data)), cgoAllocsUnknown
	ckey, _ := (C.idx_t)(key), cgoAllocsUnknown
	__ret := C.faiss_Index_compute_residual(cindex, cx, cresidual, ckey)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexDisplay function as declared in c_api/Index_c.h:159
func FaissIndexDisplay(index *Faissindex) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	__ret := C.faiss_Index_display(cindex)
	__v := (int32)(__ret)
	return __v
}

// FaissRangesearchresultNq function as declared in c_api/AuxIndexStructures_c.h:24
func FaissRangesearchresultNq(arg0 *Faissrangesearchresult) uint {
	carg0, _ := (*C.FaissRangeSearchResult)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchResult_nq(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissRangesearchresultNew function as declared in c_api/AuxIndexStructures_c.h:26
func FaissRangesearchresultNew(pRsr **Faissrangesearchresult, nq int) int32 {
	cpRsr, _ := (**C.FaissRangeSearchResult)(unsafe.Pointer(pRsr)), cgoAllocsUnknown
	cnq, _ := (C.idx_t)(nq), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchResult_new(cpRsr, cnq)
	__v := (int32)(__ret)
	return __v
}

// FaissRangesearchresultNewWith function as declared in c_api/AuxIndexStructures_c.h:28
func FaissRangesearchresultNewWith(pRsr **Faissrangesearchresult, nq int, allocLims int32) int32 {
	cpRsr, _ := (**C.FaissRangeSearchResult)(unsafe.Pointer(pRsr)), cgoAllocsUnknown
	cnq, _ := (C.idx_t)(nq), cgoAllocsUnknown
	callocLims, _ := (C.int)(allocLims), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchResult_new_with(cpRsr, cnq, callocLims)
	__v := (int32)(__ret)
	return __v
}

// FaissRangesearchresultDoAllocation function as declared in c_api/AuxIndexStructures_c.h:32
func FaissRangesearchresultDoAllocation(rsr *Faissrangesearchresult) int32 {
	crsr, _ := (*C.FaissRangeSearchResult)(unsafe.Pointer(rsr)), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchResult_do_allocation(crsr)
	__v := (int32)(__ret)
	return __v
}

// FaissRangesearchresultFree function as declared in c_api/AuxIndexStructures_c.h:34
func FaissRangesearchresultFree(obj *Faissrangesearchresult) {
	cobj, _ := (*C.FaissRangeSearchResult)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_RangeSearchResult_free(cobj)
}

// FaissRangesearchresultBufferSize function as declared in c_api/AuxIndexStructures_c.h:37
func FaissRangesearchresultBufferSize(arg0 *Faissrangesearchresult) uint {
	carg0, _ := (*C.FaissRangeSearchResult)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchResult_buffer_size(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissRangesearchresultLims function as declared in c_api/AuxIndexStructures_c.h:40
func FaissRangesearchresultLims(rsr *Faissrangesearchresult, lims []*uint) {
	crsr, _ := (*C.FaissRangeSearchResult)(unsafe.Pointer(rsr)), cgoAllocsUnknown
	clims, _ := (**C.size_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&lims)).Data)), cgoAllocsUnknown
	C.faiss_RangeSearchResult_lims(crsr, clims)
}

// FaissRangesearchresultLabels function as declared in c_api/AuxIndexStructures_c.h:45
func FaissRangesearchresultLabels(rsr *Faissrangesearchresult, labels **int, distances **float32) {
	crsr, _ := (*C.FaissRangeSearchResult)(unsafe.Pointer(rsr)), cgoAllocsUnknown
	clabels, _ := (**C.idx_t)(unsafe.Pointer(labels)), cgoAllocsUnknown
	cdistances, _ := (**C.float)(unsafe.Pointer(distances)), cgoAllocsUnknown
	C.faiss_RangeSearchResult_labels(crsr, clabels, cdistances)
}

// FaissIdselectorFree function as declared in c_api/AuxIndexStructures_c.h:51
func FaissIdselectorFree(obj *Faissidselector) {
	cobj, _ := (*C.FaissIDSelector)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_IDSelector_free(cobj)
}

// FaissIdselectorIsMember function as declared in c_api/AuxIndexStructures_c.h:53
func FaissIdselectorIsMember(sel *Faissidselector, id int) int32 {
	csel, _ := (*C.FaissIDSelector)(unsafe.Pointer(sel)), cgoAllocsUnknown
	cid, _ := (C.idx_t)(id), cgoAllocsUnknown
	__ret := C.faiss_IDSelector_is_member(csel, cid)
	__v := (int32)(__ret)
	return __v
}

// FaissIdselectorrangeFree function as declared in c_api/AuxIndexStructures_c.h:57
func FaissIdselectorrangeFree(obj *Faissidselectorrange) {
	cobj, _ := (*C.FaissIDSelectorRange)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_IDSelectorRange_free(cobj)
}

// FaissIdselectorrangeImin function as declared in c_api/AuxIndexStructures_c.h:59
func FaissIdselectorrangeImin(arg0 *Faissidselectorrange) int {
	carg0, _ := (*C.FaissIDSelectorRange)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IDSelectorRange_imin(carg0)
	__v := (int)(__ret)
	return __v
}

// FaissIdselectorrangeImax function as declared in c_api/AuxIndexStructures_c.h:60
func FaissIdselectorrangeImax(arg0 *Faissidselectorrange) int {
	carg0, _ := (*C.FaissIDSelectorRange)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IDSelectorRange_imax(carg0)
	__v := (int)(__ret)
	return __v
}

// FaissIdselectorrangeNew function as declared in c_api/AuxIndexStructures_c.h:62
func FaissIdselectorrangeNew(pSel **Faissidselectorrange, imin int, imax int) int32 {
	cpSel, _ := (**C.FaissIDSelectorRange)(unsafe.Pointer(pSel)), cgoAllocsUnknown
	cimin, _ := (C.idx_t)(imin), cgoAllocsUnknown
	cimax, _ := (C.idx_t)(imax), cgoAllocsUnknown
	__ret := C.faiss_IDSelectorRange_new(cpSel, cimin, cimax)
	__v := (int32)(__ret)
	return __v
}

// FaissIdselectorbatchNbits function as declared in c_api/AuxIndexStructures_c.h:72
func FaissIdselectorbatchNbits(arg0 *Faissidselectorbatch) int32 {
	carg0, _ := (*C.FaissIDSelectorBatch)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IDSelectorBatch_nbits(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIdselectorbatchMask function as declared in c_api/AuxIndexStructures_c.h:73
func FaissIdselectorbatchMask(arg0 *Faissidselectorbatch) int {
	carg0, _ := (*C.FaissIDSelectorBatch)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IDSelectorBatch_mask(carg0)
	__v := (int)(__ret)
	return __v
}

// FaissIdselectorbatchNew function as declared in c_api/AuxIndexStructures_c.h:75
func FaissIdselectorbatchNew(pSel **Faissidselectorbatch, n int, indices []int) int32 {
	cpSel, _ := (**C.FaissIDSelectorBatch)(unsafe.Pointer(pSel)), cgoAllocsUnknown
	cn, _ := (C.long)(n), cgoAllocsUnknown
	cindices, _ := (*C.idx_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&indices)).Data)), cgoAllocsUnknown
	__ret := C.faiss_IDSelectorBatch_new(cpSel, cn, cindices)
	__v := (int32)(__ret)
	return __v
}

// FaissBufferlistFree function as declared in c_api/AuxIndexStructures_c.h:82
func FaissBufferlistFree(obj *Faissbufferlist) {
	cobj, _ := (*C.FaissBufferList)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_BufferList_free(cobj)
}

// FaissBufferlistBufferSize function as declared in c_api/AuxIndexStructures_c.h:84
func FaissBufferlistBufferSize(arg0 *Faissbufferlist) uint {
	carg0, _ := (*C.FaissBufferList)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_BufferList_buffer_size(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissBufferlistWp function as declared in c_api/AuxIndexStructures_c.h:85
func FaissBufferlistWp(arg0 *Faissbufferlist) uint {
	carg0, _ := (*C.FaissBufferList)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_BufferList_wp(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissBufferlistAppendBuffer function as declared in c_api/AuxIndexStructures_c.h:92
func FaissBufferlistAppendBuffer(bl *Faissbufferlist) int32 {
	cbl, _ := (*C.FaissBufferList)(unsafe.Pointer(bl)), cgoAllocsUnknown
	__ret := C.faiss_BufferList_append_buffer(cbl)
	__v := (int32)(__ret)
	return __v
}

// FaissBufferlistNew function as declared in c_api/AuxIndexStructures_c.h:94
func FaissBufferlistNew(pBl **Faissbufferlist, bufferSize uint) int32 {
	cpBl, _ := (**C.FaissBufferList)(unsafe.Pointer(pBl)), cgoAllocsUnknown
	cbufferSize, _ := (C.size_t)(bufferSize), cgoAllocsUnknown
	__ret := C.faiss_BufferList_new(cpBl, cbufferSize)
	__v := (int32)(__ret)
	return __v
}

// FaissBufferlistAdd function as declared in c_api/AuxIndexStructures_c.h:96
func FaissBufferlistAdd(bl *Faissbufferlist, id int, dis float32) int32 {
	cbl, _ := (*C.FaissBufferList)(unsafe.Pointer(bl)), cgoAllocsUnknown
	cid, _ := (C.idx_t)(id), cgoAllocsUnknown
	cdis, _ := (C.float)(dis), cgoAllocsUnknown
	__ret := C.faiss_BufferList_add(cbl, cid, cdis)
	__v := (int32)(__ret)
	return __v
}

// FaissBufferlistCopyRange function as declared in c_api/AuxIndexStructures_c.h:100
func FaissBufferlistCopyRange(bl *Faissbufferlist, ofs uint, n uint, destIds []int, destDis []float32) int32 {
	cbl, _ := (*C.FaissBufferList)(unsafe.Pointer(bl)), cgoAllocsUnknown
	cofs, _ := (C.size_t)(ofs), cgoAllocsUnknown
	cn, _ := (C.size_t)(n), cgoAllocsUnknown
	cdestIds, _ := (*C.idx_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&destIds)).Data)), cgoAllocsUnknown
	cdestDis, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&destDis)).Data)), cgoAllocsUnknown
	__ret := C.faiss_BufferList_copy_range(cbl, cofs, cn, cdestIds, cdestDis)
	__v := (int32)(__ret)
	return __v
}

// FaissRangesearchpartialresultRes function as declared in c_api/AuxIndexStructures_c.h:106
func FaissRangesearchpartialresultRes(arg0 *Faissrangesearchpartialresult) *Faissrangesearchresult {
	carg0, _ := (*C.FaissRangeSearchPartialResult)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchPartialResult_res(carg0)
	__v := *(**Faissrangesearchresult)(unsafe.Pointer(&__ret))
	return __v
}

// FaissRangesearchpartialresultNew function as declared in c_api/AuxIndexStructures_c.h:108
func FaissRangesearchpartialresultNew(pRes **Faissrangesearchpartialresult, resIn *Faissrangesearchresult) int32 {
	cpRes, _ := (**C.FaissRangeSearchPartialResult)(unsafe.Pointer(pRes)), cgoAllocsUnknown
	cresIn, _ := (*C.FaissRangeSearchResult)(unsafe.Pointer(resIn)), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchPartialResult_new(cpRes, cresIn)
	__v := (int32)(__ret)
	return __v
}

// FaissRangesearchpartialresultFinalize function as declared in c_api/AuxIndexStructures_c.h:111
func FaissRangesearchpartialresultFinalize(res *Faissrangesearchpartialresult) int32 {
	cres, _ := (*C.FaissRangeSearchPartialResult)(unsafe.Pointer(res)), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchPartialResult_finalize(cres)
	__v := (int32)(__ret)
	return __v
}

// FaissRangesearchpartialresultSetLims function as declared in c_api/AuxIndexStructures_c.h:115
func FaissRangesearchpartialresultSetLims(res *Faissrangesearchpartialresult) int32 {
	cres, _ := (*C.FaissRangeSearchPartialResult)(unsafe.Pointer(res)), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchPartialResult_set_lims(cres)
	__v := (int32)(__ret)
	return __v
}

// FaissRangesearchpartialresultSetResult function as declared in c_api/AuxIndexStructures_c.h:119
func FaissRangesearchpartialresultSetResult(res *Faissrangesearchpartialresult, incremental int32) int32 {
	cres, _ := (*C.FaissRangeSearchPartialResult)(unsafe.Pointer(res)), cgoAllocsUnknown
	cincremental, _ := (C.int)(incremental), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchPartialResult_set_result(cres, cincremental)
	__v := (int32)(__ret)
	return __v
}

// FaissQueryresultQno function as declared in c_api/AuxIndexStructures_c.h:124
func FaissQueryresultQno(arg0 *Faissqueryresult) int {
	carg0, _ := (*C.FaissQueryResult)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_QueryResult_qno(carg0)
	__v := (int)(__ret)
	return __v
}

// FaissQueryresultNres function as declared in c_api/AuxIndexStructures_c.h:125
func FaissQueryresultNres(arg0 *Faissqueryresult) uint {
	carg0, _ := (*C.FaissQueryResult)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_QueryResult_nres(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissQueryresultPres function as declared in c_api/AuxIndexStructures_c.h:126
func FaissQueryresultPres(arg0 *Faissqueryresult) *Faissrangesearchpartialresult {
	carg0, _ := (*C.FaissQueryResult)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_QueryResult_pres(carg0)
	__v := *(**Faissrangesearchpartialresult)(unsafe.Pointer(&__ret))
	return __v
}

// FaissRangesearchpartialresultNewResult function as declared in c_api/AuxIndexStructures_c.h:128
func FaissRangesearchpartialresultNewResult(res *Faissrangesearchpartialresult, qno int, qr **Faissqueryresult) int32 {
	cres, _ := (*C.FaissRangeSearchPartialResult)(unsafe.Pointer(res)), cgoAllocsUnknown
	cqno, _ := (C.idx_t)(qno), cgoAllocsUnknown
	cqr, _ := (**C.FaissQueryResult)(unsafe.Pointer(qr)), cgoAllocsUnknown
	__ret := C.faiss_RangeSearchPartialResult_new_result(cres, cqno, cqr)
	__v := (int32)(__ret)
	return __v
}

// FaissQueryresultAdd function as declared in c_api/AuxIndexStructures_c.h:131
func FaissQueryresultAdd(qr *Faissqueryresult, dis float32, id int) int32 {
	cqr, _ := (*C.FaissQueryResult)(unsafe.Pointer(qr)), cgoAllocsUnknown
	cdis, _ := (C.float)(dis), cgoAllocsUnknown
	cid, _ := (C.idx_t)(id), cgoAllocsUnknown
	__ret := C.faiss_QueryResult_add(cqr, cdis, cid)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringparametersInit function as declared in c_api/Clustering_c.h:42
func FaissClusteringparametersInit(params *Faissclusteringparameters) {
	cparams, _ := params.PassRef()
	C.faiss_ClusteringParameters_init(cparams)
}

// FaissClusteringNiter function as declared in c_api/Clustering_c.h:61
func FaissClusteringNiter(arg0 *Faissclustering) int32 {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_niter(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringNredo function as declared in c_api/Clustering_c.h:62
func FaissClusteringNredo(arg0 *Faissclustering) int32 {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_nredo(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringVerbose function as declared in c_api/Clustering_c.h:63
func FaissClusteringVerbose(arg0 *Faissclustering) int32 {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_verbose(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringSpherical function as declared in c_api/Clustering_c.h:64
func FaissClusteringSpherical(arg0 *Faissclustering) int32 {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_spherical(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringUpdateIndex function as declared in c_api/Clustering_c.h:65
func FaissClusteringUpdateIndex(arg0 *Faissclustering) int32 {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_update_index(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringFrozenCentroids function as declared in c_api/Clustering_c.h:66
func FaissClusteringFrozenCentroids(arg0 *Faissclustering) int32 {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_frozen_centroids(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringMinPointsPerCentroid function as declared in c_api/Clustering_c.h:68
func FaissClusteringMinPointsPerCentroid(arg0 *Faissclustering) int32 {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_min_points_per_centroid(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringMaxPointsPerCentroid function as declared in c_api/Clustering_c.h:69
func FaissClusteringMaxPointsPerCentroid(arg0 *Faissclustering) int32 {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_max_points_per_centroid(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringSeed function as declared in c_api/Clustering_c.h:71
func FaissClusteringSeed(arg0 *Faissclustering) int32 {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_seed(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringD function as declared in c_api/Clustering_c.h:74
func FaissClusteringD(arg0 *Faissclustering) uint {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_d(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissClusteringK function as declared in c_api/Clustering_c.h:77
func FaissClusteringK(arg0 *Faissclustering) uint {
	carg0, _ := (*C.FaissClustering)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_k(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissClusteringCentroids function as declared in c_api/Clustering_c.h:80
func FaissClusteringCentroids(clustering *Faissclustering, centroids **float32, size *uint) {
	cclustering, _ := (*C.FaissClustering)(unsafe.Pointer(clustering)), cgoAllocsUnknown
	ccentroids, _ := (**C.float)(unsafe.Pointer(centroids)), cgoAllocsUnknown
	csize, _ := (*C.size_t)(unsafe.Pointer(size)), cgoAllocsUnknown
	C.faiss_Clustering_centroids(cclustering, ccentroids, csize)
}

// FaissClusteringObj function as declared in c_api/Clustering_c.h:85
func FaissClusteringObj(clustering *Faissclustering, obj **float32, size *uint) {
	cclustering, _ := (*C.FaissClustering)(unsafe.Pointer(clustering)), cgoAllocsUnknown
	cobj, _ := (**C.float)(unsafe.Pointer(obj)), cgoAllocsUnknown
	csize, _ := (*C.size_t)(unsafe.Pointer(size)), cgoAllocsUnknown
	C.faiss_Clustering_obj(cclustering, cobj, csize)
}

// FaissClusteringNew function as declared in c_api/Clustering_c.h:89
func FaissClusteringNew(pClustering **Faissclustering, d int32, k int32) int32 {
	cpClustering, _ := (**C.FaissClustering)(unsafe.Pointer(pClustering)), cgoAllocsUnknown
	cd, _ := (C.int)(d), cgoAllocsUnknown
	ck, _ := (C.int)(k), cgoAllocsUnknown
	__ret := C.faiss_Clustering_new(cpClustering, cd, ck)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringNewWithParams function as declared in c_api/Clustering_c.h:91
func FaissClusteringNewWithParams(pClustering **Faissclustering, d int32, k int32, cp *Faissclusteringparameters) int32 {
	cpClustering, _ := (**C.FaissClustering)(unsafe.Pointer(pClustering)), cgoAllocsUnknown
	cd, _ := (C.int)(d), cgoAllocsUnknown
	ck, _ := (C.int)(k), cgoAllocsUnknown
	ccp, _ := cp.PassRef()
	__ret := C.faiss_Clustering_new_with_params(cpClustering, cd, ck, ccp)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringTrain function as declared in c_api/Clustering_c.h:94
func FaissClusteringTrain(clustering *Faissclustering, n int, x []float32, index *Faissindex) int32 {
	cclustering, _ := (*C.FaissClustering)(unsafe.Pointer(clustering)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	__ret := C.faiss_Clustering_train(cclustering, cn, cx, cindex)
	__v := (int32)(__ret)
	return __v
}

// FaissClusteringFree function as declared in c_api/Clustering_c.h:97
func FaissClusteringFree(clustering *Faissclustering) {
	cclustering, _ := (*C.FaissClustering)(unsafe.Pointer(clustering)), cgoAllocsUnknown
	C.faiss_Clustering_free(cclustering)
}

// FaissKmeansClustering function as declared in c_api/Clustering_c.h:109
func FaissKmeansClustering(d uint, n uint, k uint, x []float32, centroids []float32, qError []float32) int32 {
	cd, _ := (C.size_t)(d), cgoAllocsUnknown
	cn, _ := (C.size_t)(n), cgoAllocsUnknown
	ck, _ := (C.size_t)(k), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	ccentroids, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&centroids)).Data)), cgoAllocsUnknown
	cqError, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&qError)).Data)), cgoAllocsUnknown
	__ret := C.faiss_kmeans_clustering(cd, cn, ck, cx, ccentroids, cqError)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflatNew function as declared in c_api/IndexFlat_c.h:28
func FaissIndexflatNew(pIndex **Faissindexflat) int32 {
	cpIndex, _ := (**C.FaissIndexFlat)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	__ret := C.faiss_IndexFlat_new(cpIndex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflatNewWith function as declared in c_api/IndexFlat_c.h:30
func FaissIndexflatNewWith(pIndex **Faissindexflat, d int, metric Faissmetrictype) int32 {
	cpIndex, _ := (**C.FaissIndexFlat)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cd, _ := (C.idx_t)(d), cgoAllocsUnknown
	cmetric, _ := (C.FaissMetricType)(metric), cgoAllocsUnknown
	__ret := C.faiss_IndexFlat_new_with(cpIndex, cd, cmetric)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflatXb function as declared in c_api/IndexFlat_c.h:39
func FaissIndexflatXb(index *Faissindexflat, pXb **float32, pSize *uint) {
	cindex, _ := (*C.FaissIndexFlat)(unsafe.Pointer(index)), cgoAllocsUnknown
	cpXb, _ := (**C.float)(unsafe.Pointer(pXb)), cgoAllocsUnknown
	cpSize, _ := (*C.size_t)(unsafe.Pointer(pSize)), cgoAllocsUnknown
	C.faiss_IndexFlat_xb(cindex, cpXb, cpSize)
}

// FaissIndexflatCast function as declared in c_api/IndexFlat_c.h:47
func FaissIndexflatCast(arg0 *Faissindex) *Faissindexflat {
	carg0, _ := (*C.FaissIndex)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexFlat_cast(carg0)
	__v := *(**Faissindexflat)(unsafe.Pointer(&__ret))
	return __v
}

// FaissIndexflatFree function as declared in c_api/IndexFlat_c.h:49
func FaissIndexflatFree(obj *Faissindexflat) {
	cobj, _ := (*C.FaissIndexFlat)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_IndexFlat_free(cobj)
}

// FaissIndexflatComputeDistanceSubset function as declared in c_api/IndexFlat_c.h:60
func FaissIndexflatComputeDistanceSubset(index *Faissindex, n int, x []float32, k int, distances []float32, labels []int) int32 {
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	ck, _ := (C.idx_t)(k), cgoAllocsUnknown
	cdistances, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&distances)).Data)), cgoAllocsUnknown
	clabels, _ := (*C.idx_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&labels)).Data)), cgoAllocsUnknown
	__ret := C.faiss_IndexFlat_compute_distance_subset(cindex, cn, cx, ck, cdistances, clabels)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflatipNew function as declared in c_api/IndexFlat_c.h:71
func FaissIndexflatipNew(pIndex **Faissindexflatip) int32 {
	cpIndex, _ := (**C.FaissIndexFlatIP)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	__ret := C.faiss_IndexFlatIP_new(cpIndex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflatipNewWith function as declared in c_api/IndexFlat_c.h:73
func FaissIndexflatipNewWith(pIndex **Faissindexflatip, d int) int32 {
	cpIndex, _ := (**C.FaissIndexFlatIP)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cd, _ := (C.idx_t)(d), cgoAllocsUnknown
	__ret := C.faiss_IndexFlatIP_new_with(cpIndex, cd)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflatl2New function as declared in c_api/IndexFlat_c.h:78
func FaissIndexflatl2New(pIndex **Faissindexflatl2) int32 {
	cpIndex, _ := (**C.FaissIndexFlatL2)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	__ret := C.faiss_IndexFlatL2_new(cpIndex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflatl2NewWith function as declared in c_api/IndexFlat_c.h:80
func FaissIndexflatl2NewWith(pIndex **Faissindexflatl2, d int) int32 {
	cpIndex, _ := (**C.FaissIndexFlatL2)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cd, _ := (C.idx_t)(d), cgoAllocsUnknown
	__ret := C.faiss_IndexFlatL2_new_with(cpIndex, cd)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflatl2baseshiftNew function as declared in c_api/IndexFlat_c.h:88
func FaissIndexflatl2baseshiftNew(pIndex **Faissindexflatl2baseshift, d int, nshift uint, shift []float32) int32 {
	cpIndex, _ := (**C.FaissIndexFlatL2BaseShift)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cd, _ := (C.idx_t)(d), cgoAllocsUnknown
	cnshift, _ := (C.size_t)(nshift), cgoAllocsUnknown
	cshift, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&shift)).Data)), cgoAllocsUnknown
	__ret := C.faiss_IndexFlatL2BaseShift_new(cpIndex, cd, cnshift, cshift)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexrefineflatNew function as declared in c_api/IndexFlat_c.h:97
func FaissIndexrefineflatNew(pIndex **Faissindexrefineflat, baseIndex *Faissindex) int32 {
	cpIndex, _ := (**C.FaissIndexRefineFlat)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cbaseIndex, _ := (*C.FaissIndex)(unsafe.Pointer(baseIndex)), cgoAllocsUnknown
	__ret := C.faiss_IndexRefineFlat_new(cpIndex, cbaseIndex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexrefineflatFree function as declared in c_api/IndexFlat_c.h:99
func FaissIndexrefineflatFree(obj *Faissindexrefineflat) {
	cobj, _ := (*C.FaissIndexRefineFlat)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_IndexRefineFlat_free(cobj)
}

// FaissIndexflat1dNew function as declared in c_api/IndexFlat_c.h:107
func FaissIndexflat1dNew(pIndex **Faissindexflat1d) int32 {
	cpIndex, _ := (**C.FaissIndexFlat1D)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	__ret := C.faiss_IndexFlat1D_new(cpIndex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflat1dNewWith function as declared in c_api/IndexFlat_c.h:108
func FaissIndexflat1dNewWith(pIndex **Faissindexflat1d, continuousUpdate int32) int32 {
	cpIndex, _ := (**C.FaissIndexFlat1D)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	ccontinuousUpdate, _ := (C.int)(continuousUpdate), cgoAllocsUnknown
	__ret := C.faiss_IndexFlat1D_new_with(cpIndex, ccontinuousUpdate)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexflat1dUpdatePermutation function as declared in c_api/IndexFlat_c.h:110
func FaissIndexflat1dUpdatePermutation(index *Faissindexflat1d) int32 {
	cindex, _ := (*C.FaissIndexFlat1D)(unsafe.Pointer(index)), cgoAllocsUnknown
	__ret := C.faiss_IndexFlat1D_update_permutation(cindex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfFree function as declared in c_api/IndexIVF_c.h:41
func FaissIndexivfFree(obj *Faissindexivf) {
	cobj, _ := (*C.FaissIndexIVF)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_IndexIVF_free(cobj)
}

// FaissIndexivfCast function as declared in c_api/IndexIVF_c.h:42
func FaissIndexivfCast(arg0 *Faissindex) *Faissindexivf {
	carg0, _ := (*C.FaissIndex)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_cast(carg0)
	__v := *(**Faissindexivf)(unsafe.Pointer(&__ret))
	return __v
}

// FaissIndexivfNlist function as declared in c_api/IndexIVF_c.h:45
func FaissIndexivfNlist(arg0 *Faissindexivf) uint {
	carg0, _ := (*C.FaissIndexIVF)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_nlist(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissIndexivfNprobe function as declared in c_api/IndexIVF_c.h:47
func FaissIndexivfNprobe(arg0 *Faissindexivf) uint {
	carg0, _ := (*C.FaissIndexIVF)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_nprobe(carg0)
	__v := (uint)(__ret)
	return __v
}

// FaissIndexivfQuantizer function as declared in c_api/IndexIVF_c.h:49
func FaissIndexivfQuantizer(arg0 *Faissindexivf) *Faissindex {
	carg0, _ := (*C.FaissIndexIVF)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_quantizer(carg0)
	__v := *(**Faissindex)(unsafe.Pointer(&__ret))
	return __v
}

// FaissIndexivfQuantizerTrainsAlone function as declared in c_api/IndexIVF_c.h:55
func FaissIndexivfQuantizerTrainsAlone(arg0 *Faissindexivf) byte {
	carg0, _ := (*C.FaissIndexIVF)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_quantizer_trains_alone(carg0)
	__v := (byte)(__ret)
	return __v
}

// FaissIndexivfOwnFields function as declared in c_api/IndexIVF_c.h:58
func FaissIndexivfOwnFields(arg0 *Faissindexivf) int32 {
	carg0, _ := (*C.FaissIndexIVF)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_own_fields(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfMergeFrom function as declared in c_api/IndexIVF_c.h:63
func FaissIndexivfMergeFrom(index *Faissindexivf, other *Faissindexivf, addId int) int32 {
	cindex, _ := (*C.FaissIndexIVF)(unsafe.Pointer(index)), cgoAllocsUnknown
	cother, _ := (*C.FaissIndexIVF)(unsafe.Pointer(other)), cgoAllocsUnknown
	caddId, _ := (C.idx_t)(addId), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_merge_from(cindex, cother, caddId)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfCopySubsetTo function as declared in c_api/IndexIVF_c.h:73
func FaissIndexivfCopySubsetTo(index *Faissindexivf, other *Faissindexivf, subsetType int32, a1 int, a2 int) int32 {
	cindex, _ := (*C.FaissIndexIVF)(unsafe.Pointer(index)), cgoAllocsUnknown
	cother, _ := (*C.FaissIndexIVF)(unsafe.Pointer(other)), cgoAllocsUnknown
	csubsetType, _ := (C.int)(subsetType), cgoAllocsUnknown
	ca1, _ := (C.long)(a1), cgoAllocsUnknown
	ca2, _ := (C.long)(a2), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_copy_subset_to(cindex, cother, csubsetType, ca1, ca2)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfSearchPreassigned function as declared in c_api/IndexIVF_c.h:93
func FaissIndexivfSearchPreassigned(index *Faissindexivf, n int, x []float32, k int, assign []int, centroidDis []float32, distances []float32, labels []int, storePairs int32) int32 {
	cindex, _ := (*C.FaissIndexIVF)(unsafe.Pointer(index)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	ck, _ := (C.idx_t)(k), cgoAllocsUnknown
	cassign, _ := (*C.idx_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&assign)).Data)), cgoAllocsUnknown
	ccentroidDis, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&centroidDis)).Data)), cgoAllocsUnknown
	cdistances, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&distances)).Data)), cgoAllocsUnknown
	clabels, _ := (*C.idx_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&labels)).Data)), cgoAllocsUnknown
	cstorePairs, _ := (C.int)(storePairs), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_search_preassigned(cindex, cn, cx, ck, cassign, ccentroidDis, cdistances, clabels, cstorePairs)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfGetListSize function as declared in c_api/IndexIVF_c.h:98
func FaissIndexivfGetListSize(index *Faissindexivf, listNo uint) uint {
	cindex, _ := (*C.FaissIndexIVF)(unsafe.Pointer(index)), cgoAllocsUnknown
	clistNo, _ := (C.size_t)(listNo), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_get_list_size(cindex, clistNo)
	__v := (uint)(__ret)
	return __v
}

// FaissIndexivfMakeDirectMap function as declared in c_api/IndexIVF_c.h:106
func FaissIndexivfMakeDirectMap(index *Faissindexivf, newMaintainDirectMap int32) int32 {
	cindex, _ := (*C.FaissIndexIVF)(unsafe.Pointer(index)), cgoAllocsUnknown
	cnewMaintainDirectMap, _ := (C.int)(newMaintainDirectMap), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_make_direct_map(cindex, cnewMaintainDirectMap)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfImbalanceFactor function as declared in c_api/IndexIVF_c.h:110
func FaissIndexivfImbalanceFactor(index *Faissindexivf) float64 {
	cindex, _ := (*C.FaissIndexIVF)(unsafe.Pointer(index)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVF_imbalance_factor(cindex)
	__v := (float64)(__ret)
	return __v
}

// FaissIndexivfPrintStats function as declared in c_api/IndexIVF_c.h:113
func FaissIndexivfPrintStats(index *Faissindexivf) {
	cindex, _ := (*C.FaissIndexIVF)(unsafe.Pointer(index)), cgoAllocsUnknown
	C.faiss_IndexIVF_print_stats(cindex)
}

// FaissIndexivfstatsReset function as declared in c_api/IndexIVF_c.h:122
func FaissIndexivfstatsReset(stats *Faissindexivfstats) {
	cstats, _ := stats.PassRef()
	C.faiss_IndexIVFStats_reset(cstats)
}

// FaissIndexivfstatsInit function as declared in c_api/IndexIVF_c.h:124
func FaissIndexivfstatsInit(stats *Faissindexivfstats) {
	cstats, _ := stats.PassRef()
	C.faiss_IndexIVFStats_init(cstats)
}

// FaissIndexivfflatFree function as declared in c_api/IndexIVF_c.h:133
func FaissIndexivfflatFree(obj *Faissindexivfflat) {
	cobj, _ := (*C.FaissIndexIVFFlat)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_IndexIVFFlat_free(cobj)
}

// FaissIndexivfflatNew function as declared in c_api/IndexIVF_c.h:135
func FaissIndexivfflatNew(pIndex **Faissindexivfflat) int32 {
	cpIndex, _ := (**C.FaissIndexIVFFlat)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVFFlat_new(cpIndex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfflatNewWith function as declared in c_api/IndexIVF_c.h:137
func FaissIndexivfflatNewWith(pIndex **Faissindexivfflat, quantizer *Faissindex, d uint, nlist uint) int32 {
	cpIndex, _ := (**C.FaissIndexIVFFlat)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cquantizer, _ := (*C.FaissIndex)(unsafe.Pointer(quantizer)), cgoAllocsUnknown
	cd, _ := (C.size_t)(d), cgoAllocsUnknown
	cnlist, _ := (C.size_t)(nlist), cgoAllocsUnknown
	__ret := C.faiss_IndexIVFFlat_new_with(cpIndex, cquantizer, cd, cnlist)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfflatNewWithMetric function as declared in c_api/IndexIVF_c.h:140
func FaissIndexivfflatNewWithMetric(pIndex **Faissindexivfflat, quantizer []Faissindex, d uint, nlist uint, metric Faissmetrictype) int32 {
	cpIndex, _ := (**C.FaissIndexIVFFlat)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cquantizer, _ := (*C.FaissIndex)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&quantizer)).Data)), cgoAllocsUnknown
	cd, _ := (C.size_t)(d), cgoAllocsUnknown
	cnlist, _ := (C.size_t)(nlist), cgoAllocsUnknown
	cmetric, _ := (C.FaissMetricType)(metric), cgoAllocsUnknown
	__ret := C.faiss_IndexIVFFlat_new_with_metric(cpIndex, cquantizer, cd, cnlist, cmetric)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfflatAddCore function as declared in c_api/IndexIVF_c.h:144
func FaissIndexivfflatAddCore(index *Faissindexivfflat, n int, x []float32, xids []int, precomputedIdx []int) int32 {
	cindex, _ := (*C.FaissIndexIVFFlat)(unsafe.Pointer(index)), cgoAllocsUnknown
	cn, _ := (C.idx_t)(n), cgoAllocsUnknown
	cx, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&x)).Data)), cgoAllocsUnknown
	cxids, _ := (*C.long)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&xids)).Data)), cgoAllocsUnknown
	cprecomputedIdx, _ := (*C.long)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&precomputedIdx)).Data)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVFFlat_add_core(cindex, cn, cx, cxids, cprecomputedIdx)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexivfflatUpdateVectors function as declared in c_api/IndexIVF_c.h:155
func FaissIndexivfflatUpdateVectors(index *Faissindexivfflat, nv int32, idx []int, v []float32) int32 {
	cindex, _ := (*C.FaissIndexIVFFlat)(unsafe.Pointer(index)), cgoAllocsUnknown
	cnv, _ := (C.int)(nv), cgoAllocsUnknown
	cidx, _ := (*C.idx_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&idx)).Data)), cgoAllocsUnknown
	cv, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&v)).Data)), cgoAllocsUnknown
	__ret := C.faiss_IndexIVFFlat_update_vectors(cindex, cnv, cidx, cv)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexlshFree function as declared in c_api/IndexLSH_c.h:25
func FaissIndexlshFree(obj *Faissindexlsh) {
	cobj, _ := (*C.FaissIndexLSH)(unsafe.Pointer(obj)), cgoAllocsUnknown
	C.faiss_IndexLSH_free(cobj)
}

// FaissIndexlshCast function as declared in c_api/IndexLSH_c.h:26
func FaissIndexlshCast(arg0 *Faissindex) *Faissindexlsh {
	carg0, _ := (*C.FaissIndex)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexLSH_cast(carg0)
	__v := *(**Faissindexlsh)(unsafe.Pointer(&__ret))
	return __v
}

// FaissIndexlshNbits function as declared in c_api/IndexLSH_c.h:28
func FaissIndexlshNbits(arg0 *Faissindexlsh) int32 {
	carg0, _ := (*C.FaissIndexLSH)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexLSH_nbits(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexlshBytesPerVec function as declared in c_api/IndexLSH_c.h:29
func FaissIndexlshBytesPerVec(arg0 *Faissindexlsh) int32 {
	carg0, _ := (*C.FaissIndexLSH)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexLSH_bytes_per_vec(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexlshRotateData function as declared in c_api/IndexLSH_c.h:30
func FaissIndexlshRotateData(arg0 *Faissindexlsh) int32 {
	carg0, _ := (*C.FaissIndexLSH)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexLSH_rotate_data(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexlshTrainThresholds function as declared in c_api/IndexLSH_c.h:31
func FaissIndexlshTrainThresholds(arg0 *Faissindexlsh) int32 {
	carg0, _ := (*C.FaissIndexLSH)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexLSH_train_thresholds(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexlshNew function as declared in c_api/IndexLSH_c.h:33
func FaissIndexlshNew(pIndex **Faissindexlsh, d int, nbits int32) int32 {
	cpIndex, _ := (**C.FaissIndexLSH)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cd, _ := (C.idx_t)(d), cgoAllocsUnknown
	cnbits, _ := (C.int)(nbits), cgoAllocsUnknown
	__ret := C.faiss_IndexLSH_new(cpIndex, cd, cnbits)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexlshNewWithOptions function as declared in c_api/IndexLSH_c.h:35
func FaissIndexlshNewWithOptions(pIndex **Faissindexlsh, d int, nbits int32, rotateData int32, trainThresholds int32) int32 {
	cpIndex, _ := (**C.FaissIndexLSH)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cd, _ := (C.idx_t)(d), cgoAllocsUnknown
	cnbits, _ := (C.int)(nbits), cgoAllocsUnknown
	crotateData, _ := (C.int)(rotateData), cgoAllocsUnknown
	ctrainThresholds, _ := (C.int)(trainThresholds), cgoAllocsUnknown
	__ret := C.faiss_IndexLSH_new_with_options(cpIndex, cd, cnbits, crotateData, ctrainThresholds)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexidmapOwnFields function as declared in c_api/MetaIndexes_c.h:25
func FaissIndexidmapOwnFields(arg0 *Faissindexidmap) int32 {
	carg0, _ := (*C.FaissIndexIDMap)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexIDMap_own_fields(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexidmapSetOwnFields function as declared in c_api/MetaIndexes_c.h:25
func FaissIndexidmapSetOwnFields(arg0 *Faissindexidmap, arg1 int32) {
	carg0, _ := (*C.FaissIndexIDMap)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := (C.int)(arg1), cgoAllocsUnknown
	C.faiss_IndexIDMap_set_own_fields(carg0, carg1)
}

// FaissIndexidmapNew function as declared in c_api/MetaIndexes_c.h:27
func FaissIndexidmapNew(pIndex **Faissindexidmap, index *Faissindex) int32 {
	cpIndex, _ := (**C.FaissIndexIDMap)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	__ret := C.faiss_IndexIDMap_new(cpIndex, cindex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexidmapIdMap function as declared in c_api/MetaIndexes_c.h:36
func FaissIndexidmapIdMap(index *Faissindexidmap, pIdMap **int, pSize *uint) {
	cindex, _ := (*C.FaissIndexIDMap)(unsafe.Pointer(index)), cgoAllocsUnknown
	cpIdMap, _ := (**C.long)(unsafe.Pointer(pIdMap)), cgoAllocsUnknown
	cpSize, _ := (*C.size_t)(unsafe.Pointer(pSize)), cgoAllocsUnknown
	C.faiss_IndexIDMap_id_map(cindex, cpIdMap, cpSize)
}

// FaissIndexidmap2New function as declared in c_api/MetaIndexes_c.h:42
func FaissIndexidmap2New(pIndex **Faissindexidmap2, index *Faissindex) int32 {
	cpIndex, _ := (**C.FaissIndexIDMap2)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cindex, _ := (*C.FaissIndex)(unsafe.Pointer(index)), cgoAllocsUnknown
	__ret := C.faiss_IndexIDMap2_new(cpIndex, cindex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexidmap2ConstructRevMap function as declared in c_api/MetaIndexes_c.h:45
func FaissIndexidmap2ConstructRevMap(index *Faissindexidmap2) int32 {
	cindex, _ := (*C.FaissIndexIDMap2)(unsafe.Pointer(index)), cgoAllocsUnknown
	__ret := C.faiss_IndexIDMap2_construct_rev_map(cindex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexshardsOwnFields function as declared in c_api/MetaIndexes_c.h:51
func FaissIndexshardsOwnFields(arg0 *Faissindexshards) int32 {
	carg0, _ := (*C.FaissIndexShards)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexShards_own_fields(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexshardsSetOwnFields function as declared in c_api/MetaIndexes_c.h:51
func FaissIndexshardsSetOwnFields(arg0 *Faissindexshards, arg1 int32) {
	carg0, _ := (*C.FaissIndexShards)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := (C.int)(arg1), cgoAllocsUnknown
	C.faiss_IndexShards_set_own_fields(carg0, carg1)
}

// FaissIndexshardsSetThreaded function as declared in c_api/MetaIndexes_c.h:52
func FaissIndexshardsSetThreaded(arg0 *Faissindexshards, arg1 int32) {
	carg0, _ := (*C.FaissIndexShards)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := (C.int)(arg1), cgoAllocsUnknown
	C.faiss_IndexShards_set_threaded(carg0, carg1)
}

// FaissIndexshardsThreaded function as declared in c_api/MetaIndexes_c.h:52
func FaissIndexshardsThreaded(arg0 *Faissindexshards) int32 {
	carg0, _ := (*C.FaissIndexShards)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexShards_threaded(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexshardsSetSuccessiveIds function as declared in c_api/MetaIndexes_c.h:53
func FaissIndexshardsSetSuccessiveIds(arg0 *Faissindexshards, arg1 int32) {
	carg0, _ := (*C.FaissIndexShards)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := (C.int)(arg1), cgoAllocsUnknown
	C.faiss_IndexShards_set_successive_ids(carg0, carg1)
}

// FaissIndexshardsSuccessiveIds function as declared in c_api/MetaIndexes_c.h:53
func FaissIndexshardsSuccessiveIds(arg0 *Faissindexshards) int32 {
	carg0, _ := (*C.FaissIndexShards)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	__ret := C.faiss_IndexShards_successive_ids(carg0)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexshardsNew function as declared in c_api/MetaIndexes_c.h:55
func FaissIndexshardsNew(pIndex **Faissindexshards, d int) int32 {
	cpIndex, _ := (**C.FaissIndexShards)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cd, _ := (C.idx_t)(d), cgoAllocsUnknown
	__ret := C.faiss_IndexShards_new(cpIndex, cd)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexshardsNewWithOptions function as declared in c_api/MetaIndexes_c.h:57
func FaissIndexshardsNewWithOptions(pIndex **Faissindexshards, d int, threaded int32, successiveIds int32) int32 {
	cpIndex, _ := (**C.FaissIndexShards)(unsafe.Pointer(pIndex)), cgoAllocsUnknown
	cd, _ := (C.idx_t)(d), cgoAllocsUnknown
	cthreaded, _ := (C.int)(threaded), cgoAllocsUnknown
	csuccessiveIds, _ := (C.int)(successiveIds), cgoAllocsUnknown
	__ret := C.faiss_IndexShards_new_with_options(cpIndex, cd, cthreaded, csuccessiveIds)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexshardsShardIndexes function as declared in c_api/MetaIndexes_c.h:66
func FaissIndexshardsShardIndexes(index *Faissindexshards, pShardIndexes **Faissindex, pSize *uint) {
	cindex, _ := (*C.FaissIndexShards)(unsafe.Pointer(index)), cgoAllocsUnknown
	cpShardIndexes, _ := (**C.FaissIndex)(unsafe.Pointer(pShardIndexes)), cgoAllocsUnknown
	cpSize, _ := (*C.size_t)(unsafe.Pointer(pSize)), cgoAllocsUnknown
	C.faiss_IndexShards_shard_indexes(cindex, cpShardIndexes, cpSize)
}

// FaissIndexshardsAddShard function as declared in c_api/MetaIndexes_c.h:68
func FaissIndexshardsAddShard(index *Faissindexshards, shard *Faissindex) int32 {
	cindex, _ := (*C.FaissIndexShards)(unsafe.Pointer(index)), cgoAllocsUnknown
	cshard, _ := (*C.FaissIndex)(unsafe.Pointer(shard)), cgoAllocsUnknown
	__ret := C.faiss_IndexShards_add_shard(cindex, cshard)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexshardsSyncWithShardIndexes function as declared in c_api/MetaIndexes_c.h:71
func FaissIndexshardsSyncWithShardIndexes(index *Faissindexshards) int32 {
	cindex, _ := (*C.FaissIndexShards)(unsafe.Pointer(index)), cgoAllocsUnknown
	__ret := C.faiss_IndexShards_sync_with_shard_indexes(cindex)
	__v := (int32)(__ret)
	return __v
}

// FaissIndexshardsAt function as declared in c_api/MetaIndexes_c.h:73
func FaissIndexshardsAt(index *Faissindexshards, i int32) *Faissindex {
	cindex, _ := (*C.FaissIndexShards)(unsafe.Pointer(index)), cgoAllocsUnknown
	ci, _ := (C.int)(i), cgoAllocsUnknown
	__ret := C.faiss_IndexShards_at(cindex, ci)
	__v := *(**Faissindex)(unsafe.Pointer(&__ret))
	return __v
}
